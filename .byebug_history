continue
@top_hotels_by_hotels.empty?
@top_hotels_by_hotels
continue
Comment.find_by id: 7
Comment.find_by id: 5
Comment.find_by id: 6
params[:id]
@comment = @hotel.comments.find_by id: params[:id]
@hotel = Hotel.find_by id: params[:hotel_id]
continue
@hotels
continue
params[:images][:picture].first
params[:images][:picture].count
params[:images][:picture]
params[:images]
hotel_params[:images]
hotel_params
params[:image]
params
continue
@hotels.first.village
@hotels
@hotels.joins(:village)
@hotels.join(:village)
@hotels.first.join(:village)
@hotels.first.joins(:village)
@hotels.first
@hotels
continue
Village.find_by name_like: 'a'
Village.find_by name: @village_name_param
@village_name_param
@village
continue
@village
@search
continue
self.content.empty?
self
continue
@hotel.images
a
continue
@address.distric
@address.village
@address
self
continue
self.village
self
continue
params[:head]
continue
@distric.nil?
@distric
continue
Provincial.kinds.to_a
Provincial.kinds
Provincial.kinds.collect{|key, value| [t(key), value]}
params
continue
params
continue
params
params[:provincial]
params.require(:provincial).permit :name, :kind
continue
Provincial.kinds.collect{|key, value| [t(key), value]}
Provincial.kinds.collect{|k,v| puts v}
Provincial.kinds.collect
Provincial.kinds
params[:provincial][:kind].class
params[:provincial][:kind]
params["kind"]
params
continue
